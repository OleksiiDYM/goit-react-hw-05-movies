{"version":3,"file":"static/js/343.3e4d3ba0.chunk.js","mappings":"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","sources":["pages/MovieItem/MovieItem.styled.js","pages/MovieItem/MovieItem.jsx","services/Api.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Btn = styled.button`\n  border: none;\n  background-color: transparent;\n  margin: 20px 0 0 35px;\n  padding: 0;\n  font-weight: 700;\n  cursor: pointer;\n`;\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  padding: 30px;\n  background-color: #3f51b542;\n  margin: 20px 30px 30px;\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n`;\n\nexport const Img = styled.img`\n  width: 300px;\n`;\n\nexport const MovieInfo = styled.div`\n  padding-left: 30px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`;\n\nexport const MovieTitle = styled.h2`\n  margin-left: 0;\n`;\n\nexport const AddInfo = styled.h3`\n  margin-left: 35px;\n  margin-bottom: 0;\n  color: #323a37;\n`;\n\nexport const InfoList = styled.ul`\n  text-decoration: none;\n  margin-left: 0;\n  margin-top: 0;\n  color: #323a37;\n`;\n\nexport const InfoLink = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n  text-decoration: none;\n  font-weight: 600;\n  &.active {\n    color: #323a37;\n    font-weight: 700;\n    transform: scale(1.1);\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams, Outlet, useLocation, useNavigate } from 'react-router-dom';\nimport { fetchMovieDetails } from '../../services/Api';\nimport {\n  Btn,\n  MovieContainer,\n  Img,\n  MovieInfo,\n  MovieTitle,\n  AddInfo,\n  InfoList,\n  InfoLink,\n} from './MovieItem.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  const { poster, title, releaseYear, userScore, overview, genres } =\n    movie ?? {};\n\n  useEffect(() => {\n    fetchMovieDetails(movieId).then(setMovie);\n  }, [movieId]);\n\n  const backToMovies = () => {\n    navigate(backLinkHref);\n  };\n\n  return (\n    <div>\n      <Btn type=\"button\" onClick={backToMovies}>\n        Back to movies\n      </Btn>\n      {movie && (\n        <div>\n          <MovieContainer>\n            <Img src={poster} alt={title} />\n            <MovieInfo>\n              <MovieTitle>\n                {title} ({releaseYear})\n              </MovieTitle>\n              <p>User Score: {userScore}%</p>\n              <h3>Overview</h3>\n              <p>{overview}</p>\n              <h3>Genres</h3>\n              <p>{genres.map(({ name }) => name).join(' ')}</p>\n            </MovieInfo>\n          </MovieContainer>\n\n          <AddInfo>Additional information</AddInfo>\n\n          <InfoList>\n            <li>\n              <InfoLink to={'cast'} state={{ from: location?.state?.from }}>\n                Cast\n              </InfoLink>\n            </li>\n            <li>\n              <InfoLink to={'reviews'} state={{ from: location?.state?.from }}>\n                Reviews\n              </InfoLink>\n            </li>\n          </InfoList>\n          <Outlet />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nimport defaultPhoto from '../components/Images/default.jpg';\nimport defaultMoviePhoto from '../components/Images/defaultMovie.jpg';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'd49e0110fba862765bd35e51be725d3a',\n};\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrending = async () => {\n  return axios.get(`/trending/all/week?`).then(({ data: { results } }) =>\n    results.map(({ id, title, poster_path: poster }) => ({\n      id,\n      title,\n      poster: IMG_URL + poster,\n    }))\n  );\n};\n\nexport const fetchByQuery = async query => {\n  return axios\n    .get(`/search/movie?query=${query}`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: poster ? IMG_URL + poster : defaultMoviePhoto,\n      }))\n    );\n};\n\nexport const fetchMovieDetails = movieId => {\n  return axios\n    .get(`/movie/${movieId}?`)\n    .then(\n      ({\n        data: {\n          id,\n          poster_path: poster,\n          title,\n          release_date: releaseYear,\n          vote_average: userScore,\n          overview,\n          genres,\n        },\n      }) => ({\n        id,\n        poster: IMG_URL + poster,\n        title,\n        releaseYear: new Date(releaseYear).getFullYear(),\n        userScore: Math.round(userScore * 10),\n        overview,\n        genres,\n      })\n    );\n};\n\nexport const fetchMovieCredits = movieId => {\n  return axios.get(`/movie/${movieId}/credits?`).then(({ data: { cast } }) =>\n    cast.map(({ id, name, character, profile_path: photo }) => ({\n      id,\n      name,\n      character,\n      photo: photo ? IMG_URL + photo : defaultPhoto,\n    }))\n  );\n};\n\nexport const fetchMovieReviews = movieId => {\n  return axios.get(`/movie/${movieId}/reviews?`).then(({ data: { results } }) =>\n    results.map(({ id, author, content }) => ({\n      id,\n      author,\n      content,\n    }))\n  );\n};\n"],"names":["Btn","styled","MovieContainer","Img","MovieInfo","MovieTitle","AddInfo","InfoList","InfoLink","NavLink","useState","movie","setMovie","movieId","useParams","location","useLocation","navigate","useNavigate","backLinkHref","state","from","poster","title","releaseYear","userScore","overview","genres","useEffect","fetchMovieDetails","then","type","onClick","src","alt","map","name","join","to","axios","api_key","IMG_URL","fetchTrending","data","results","id","poster_path","fetchByQuery","query","defaultMoviePhoto","release_date","vote_average","Date","getFullYear","Math","round","fetchMovieCredits","cast","character","photo","profile_path","fetchMovieReviews","author","content"],"sourceRoot":""}