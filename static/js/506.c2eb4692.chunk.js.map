{"version":3,"file":"static/js/506.c2eb4692.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","services/Api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 30px;\n  background-color: #3f51b542;\n  margin: 20px 30px 30px;\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n`;\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 100%;\n  margin-top: 0;\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n  padding: 0;\n  transition-duration: 300ms;\n`;\n\nexport const CastItem = styled.li`\n  background: rgb(255, 255, 255);\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n  width: 100%;\n  max-width: 200px;\n  margin: 10px;\n  border-radius: 5px;\n  display: inline-block;\n  text-decoration: none;\n  color: black;\n  transition-duration: 300ms;\n`;\n\nexport const Img = styled.img`\n  padding: 0px;\n  margin: 0px;\n  height: 260px;\n  width: 100%;\n  display: block;\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n`;\n\nexport const CastDescr = styled.div`\n  padding: 5px;\n  margin: 0px;\n  font-size: 10px;\n  color: #3f51b5;\n`;\n\nexport const CastName = styled.h3`\n  margin: 0px;\n`;\n\nexport const CastChar = styled.p`\n  margin: 0px;\n`;\n","import { fetchMovieCredits } from '../../services/Api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Loader from '../../components/Loader/Loader';\nimport {\n  CastContainer,\n  CastList,\n  CastItem,\n  Img,\n  CastDescr,\n  CastName,\n  CastChar,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams('movieId');\n  const [credits, setCredits] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    try {\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n    fetchMovieCredits(movieId).then(setCredits);\n  }, [movieId]);\n\n  return (\n    <CastContainer>\n      {isLoading && <Loader />}\n      {error && <p>Oops, something went wrong...</p>}\n      {credits.length > 0 && (\n        <CastList>\n          {credits.map(({ id, name, character, photo }) => {\n            return (\n              <CastItem key={id}>\n                <Img src={photo} alt={name} />\n                <CastDescr>\n                  <CastName>{name}</CastName>\n                  <CastChar>Character: {character}</CastChar>\n                </CastDescr>\n              </CastItem>\n            );\n          })}\n        </CastList>\n      )}\n    </CastContainer>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const Loading = styled.div`\n  position: relative;\n  top: 10vh;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { Loading } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <Loading>\n      <RotatingLines\n        strokeColor=\"#3f51b590\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"150\"\n        visible={true}\n      />\n    </Loading>\n  );\n};\nexport default Loader;\n","import axios from 'axios';\nimport defaultPhoto from '../components/Images/default.jpg';\nimport defaultMoviePhoto from '../components/Images/defaultMovie.jpg';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'd49e0110fba862765bd35e51be725d3a',\n};\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrending = async () => {\n  return axios.get(`/trending/all/week?`).then(({ data: { results } }) =>\n    results.map(({ id, title, poster_path: poster }) => ({\n      id,\n      title,\n      poster: IMG_URL + poster,\n    }))\n  );\n};\n\nexport const fetchByQuery = async query => {\n  return axios\n    .get(`/search/movie?query=${query}`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: poster ? IMG_URL + poster : defaultMoviePhoto,\n      }))\n    );\n};\n\nexport const fetchMovieDetails = movieId => {\n  return axios\n    .get(`/movie/${movieId}?`)\n    .then(\n      ({\n        data: {\n          id,\n          poster_path: poster,\n          title,\n          release_date: releaseYear,\n          vote_average: userScore,\n          overview,\n          genres,\n        },\n      }) => ({\n        id,\n        poster: IMG_URL + poster,\n        title,\n        releaseYear: new Date(releaseYear).getFullYear(),\n        userScore: Math.round(userScore * 10),\n        overview,\n        genres,\n      })\n    );\n};\n\nexport const fetchMovieCredits = movieId => {\n  return axios.get(`/movie/${movieId}/credits?`).then(({ data: { cast } }) =>\n    cast.map(({ id, name, character, profile_path: photo }) => ({\n      id,\n      name,\n      character,\n      photo: photo ? IMG_URL + photo : defaultPhoto,\n    }))\n  );\n};\n\nexport const fetchMovieReviews = movieId => {\n  return axios.get(`/movie/${movieId}/reviews?`).then(({ data: { results } }) =>\n    results.map(({ id, author, content }) => ({\n      id,\n      author,\n      content,\n    }))\n  );\n};\n"],"names":["CastContainer","styled","CastList","CastItem","Img","CastDescr","CastName","CastChar","movieId","useParams","useState","credits","setCredits","isLoading","setIsLoading","error","useEffect","fetchMovieCredits","then","Loader","length","map","id","name","character","photo","src","alt","Loading","strokeColor","strokeWidth","animationDuration","width","visible","axios","api_key","IMG_URL","fetchTrending","data","results","title","poster","poster_path","fetchByQuery","query","defaultMoviePhoto","fetchMovieDetails","releaseYear","release_date","userScore","vote_average","overview","genres","Date","getFullYear","Math","round","cast","profile_path","fetchMovieReviews","author","content"],"sourceRoot":""}