{"version":3,"file":"static/js/302.74961000.chunk.js","mappings":"gMAEaA,E,QAAUC,GAAAA,IAAH,6D,SCcpB,EAbe,WACb,OACE,SAACD,EAAD,WACE,SAAC,KAAD,CACEE,YAAY,YACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,MACNC,SAAS,KAIhB,C,wFCNYC,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAAC,KAAD,UACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,OAAd,OACV,SAAC,KAAD,WACE,UAAC,KAAD,CAAWC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA/C,WACE,SAAC,KAAD,CAAKS,IAAKJ,EAAQK,IAAKN,KACvB,SAAC,KAAD,WACE,wBAAKA,UAJKD,EADN,KAYjB,C,oICYD,UA9Ba,WACX,OAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAea,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACRH,GAAa,GACb,IAAMI,EAAS,mCAAG,8GAEKC,EAAAA,EAAAA,MAFL,OAERC,EAFQ,OAGdR,EAAUQ,GAHI,gDAKdJ,EAAS,KAAMK,SALD,yBAOdP,GAAa,GAPC,4EAAH,qDAUfI,GACD,GAAE,KAGD,UAAC,KAAD,YACE,SAAC,KAAD,UAAW,uBACVL,IAAa,SAAC,IAAD,IACbE,IAAS,uBAAG,kCACZhB,EAAOuB,OAAS,IAAK,SAAC,IAAD,CAAYvB,OAAQA,MAG/C,C,uPChCYwB,EAAgB/B,EAAAA,GAAAA,IAAH,4FAObgC,EAAYhC,EAAAA,GAAAA,GAAH,uHASTiC,EAAYjC,EAAAA,GAAAA,GAAH,4LAWTkC,EAAYlC,EAAAA,GAAAA,GAAH,6dAmBTmC,GAAYnC,EAAAA,EAAAA,IAAOoC,EAAAA,GAAPpC,CAAH,kDAITqC,EAAMrC,EAAAA,GAAAA,IAAH,+KAUHsC,EAAatC,EAAAA,GAAAA,IAAH,2K,8PC3DvBuC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGX,IAAMC,EAAU,kCAEHd,EAAa,mCAAG,uGACpBY,EAAAA,EAAAA,IAAA,uBAAiCG,MAAK,qBAAGd,KAAQe,QAC9CjC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAoBC,EAA3B,EAAc+B,YAAd,MAAyC,CACnDjC,GAAAA,EACAC,MAAAA,EACAC,OAAQ4B,EAAU5B,EAHR,GAD+B,KADlB,2CAAH,qDAUbgC,EAAY,mCAAG,WAAMC,GAAN,0FACnBP,EAAAA,EAAAA,IAAA,8BACuBO,IAC3BJ,MAAK,qBAAGd,KAAQe,QACPjC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAoBC,EAA3B,EAAc+B,YAAd,MAAyC,CACnDjC,GAAAA,EACAC,MAAAA,EACAC,OAAQA,EAAS4B,EAAU5B,EAASkC,EAH1B,GADR,KAHkB,2CAAH,sDAYZC,EAAoB,SAAAC,GAC/B,OAAOV,EAAAA,EAAAA,IAAA,iBACUU,EADV,MAEJP,MACC,oBACEd,KACEjB,EAFJ,EAEIA,GACaE,EAHjB,EAGI+B,YACAhC,EAJJ,EAIIA,MACcsC,EALlB,EAKIC,aACcC,EANlB,EAMIC,aACAC,EAPJ,EAOIA,SACAC,EARJ,EAQIA,OARJ,MAUO,CACL5C,GAAAA,EACAE,OAAQ4B,EAAU5B,EAClBD,MAAAA,EACAsC,YAAa,IAAIM,KAAKN,GAAaO,cACnCL,UAAWM,KAAKC,MAAkB,GAAZP,GACtBE,SAAAA,EACAC,OAAAA,EAjBF,GAoBL,EAEYK,EAAoB,SAAAX,GAC/B,OAAOV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,cAAwCP,MAAK,qBAAGd,KAAQiC,KACxDnD,KAAI,gBAAGC,EAAH,EAAGA,GAAImD,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAyBC,EAAtC,EAAwBC,aAAxB,MAAmD,CAC1DtD,GAAAA,EACAmD,KAAAA,EACAC,UAAAA,EACAC,MAAOA,EAAQvB,EAAUuB,E,k0MAJlB,GADyC,GAQrD,EAEYE,EAAoB,SAAAjB,GAC/B,OAAOV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,cAAwCP,MAAK,qBAAGd,KAAQe,QACrDjC,KAAI,kBAA8B,CACxCC,GADU,EAAGA,GAEbwD,OAFU,EAAOA,OAGjBC,QAHU,EAAeA,QAAf,GADsC,GAOrD,C","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.jsx","pages/Home/Home.styled.js","services/Api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Loading = styled.div`\n  position: relative;\n  top: 10vh;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { Loading } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <Loading>\n      <RotatingLines\n        strokeColor=\"#3f51b590\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"150\"\n        visible={true}\n      />\n    </Loading>\n  );\n};\nexport default Loader;\n","import { useLocation } from 'react-router-dom';\nimport {\n  MovieItem,\n  MovieLink,\n  Img,\n  MovieTitle,\n  MovieList,\n} from '../../pages/Home/Home.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <MovieList>\n      {movies.map(({ id, title, poster }) => (\n        <MovieItem key={id}>\n          <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n            <Img src={poster} alt={title} />\n            <MovieTitle>\n              <h3>{title}</h3>\n            </MovieTitle>\n          </MovieLink>\n        </MovieItem>\n      ))}\n    </MovieList>\n  );\n};\n","import { useState, useEffect } from 'react';\n// import { useLocation } from 'react-router-dom';\nimport { fetchTrending } from '../../services/Api';\nimport Loader from '../../components/Loader/Loader';\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\nimport { HomeContainer, HomeTitle } from './Home.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  // const location = useLocation();\n  useEffect(() => {\n    setIsLoading(true);\n    const getMovies = async () => {\n      try {\n        const data = await fetchTrending();\n        setMovies(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovies();\n  }, []);\n\n  return (\n    <HomeContainer>\n      <HomeTitle>Tranding this week</HomeTitle>\n      {isLoading && <Loader />}\n      {error && <p>Oops, something went wrong...</p>}\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </HomeContainer>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const HomeContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n  }\n`;\n\nexport const HomeTitle = styled.h1`\n  font-weight: 700;\n  color: #323a37;\n  \n  margin: 30px, 0;\n  text-decoration: none;\n  }\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 100%;\n  margin-top: 0;\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n  padding: 0;\n`;\n\nexport const MovieItem = styled.li`\n  background: rgb(255, 255, 255);\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n  width: 100%;\n  max-width: 200px;\n  margin: 10px;\n  border-radius: 5px;\n  display: inline-block;\n  text-decoration: none;\n  color: black;\n  transition-duration: 300ms;\n  &:hover {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: rgb(0 0 0 / 8%) 0px 10px 25px;\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Img = styled.img`\n  padding: 0px;\n  margin: 0px;\n  height: 260px;\n  width: 100%;\n  display: block;\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n`;\n\nexport const MovieTitle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  padding: 5px;\n  margin: 0px;\n  font-size: 10px;\n  color: #323a37;\n`;\n","import axios from 'axios';\nimport defaultPhoto from '../components/Images/default.jpg';\nimport defaultMoviePhoto from '../components/Images/defaultMovie.jpg';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'd49e0110fba862765bd35e51be725d3a',\n};\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrending = async () => {\n  return axios.get(`/trending/all/week?`).then(({ data: { results } }) =>\n    results.map(({ id, title, poster_path: poster }) => ({\n      id,\n      title,\n      poster: IMG_URL + poster,\n    }))\n  );\n};\n\nexport const fetchByQuery = async query => {\n  return axios\n    .get(`/search/movie?query=${query}`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: poster ? IMG_URL + poster : defaultMoviePhoto,\n      }))\n    );\n};\n\nexport const fetchMovieDetails = movieId => {\n  return axios\n    .get(`/movie/${movieId}?`)\n    .then(\n      ({\n        data: {\n          id,\n          poster_path: poster,\n          title,\n          release_date: releaseYear,\n          vote_average: userScore,\n          overview,\n          genres,\n        },\n      }) => ({\n        id,\n        poster: IMG_URL + poster,\n        title,\n        releaseYear: new Date(releaseYear).getFullYear(),\n        userScore: Math.round(userScore * 10),\n        overview,\n        genres,\n      })\n    );\n};\n\nexport const fetchMovieCredits = movieId => {\n  return axios.get(`/movie/${movieId}/credits?`).then(({ data: { cast } }) =>\n    cast.map(({ id, name, character, profile_path: photo }) => ({\n      id,\n      name,\n      character,\n      photo: photo ? IMG_URL + photo : defaultPhoto,\n    }))\n  );\n};\n\nexport const fetchMovieReviews = movieId => {\n  return axios.get(`/movie/${movieId}/reviews?`).then(({ data: { results } }) =>\n    results.map(({ id, author, content }) => ({\n      id,\n      author,\n      content,\n    }))\n  );\n};\n"],"names":["Loading","styled","strokeColor","strokeWidth","animationDuration","width","visible","MoviesList","movies","location","useLocation","map","id","title","poster","to","state","from","src","alt","useState","setMovies","isLoading","setIsLoading","error","setError","useEffect","getMovies","fetchTrending","data","message","length","HomeContainer","HomeTitle","MovieList","MovieItem","MovieLink","Link","Img","MovieTitle","axios","api_key","IMG_URL","then","results","poster_path","fetchByQuery","query","defaultMoviePhoto","fetchMovieDetails","movieId","releaseYear","release_date","userScore","vote_average","overview","genres","Date","getFullYear","Math","round","fetchMovieCredits","cast","name","character","photo","profile_path","fetchMovieReviews","author","content"],"sourceRoot":""}