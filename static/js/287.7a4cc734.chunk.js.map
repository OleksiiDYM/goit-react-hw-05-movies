{"version":3,"file":"static/js/287.7a4cc734.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.styled.js","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/Api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Loading = styled.div`\n  position: relative;\n  top: 10vh;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { Loading } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <Loading>\n      <RotatingLines\n        strokeColor=\"#3f51b590\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"150\"\n        visible={true}\n      />\n    </Loading>\n  );\n};\nexport default Loader;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  MovieItem,\n  MovieLink,\n  Img,\n  MovieTitle,\n  MovieList,\n} from '../../pages/Home/Home.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <MovieList>\n      {movies.map(({ id, title, poster }) => (\n        <MovieItem key={id}>\n          <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n            <Img src={poster} alt={title} />\n            <MovieTitle>\n              <h3>{title}</h3>\n            </MovieTitle>\n          </MovieLink>\n        </MovieItem>\n      ))}\n    </MovieList>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      poster: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const HomeContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n  }\n`;\n\nexport const HomeTitle = styled.h1`\n  font-weight: 700;\n  color: #323a37;\n  \n  margin: 30px, 0;\n  text-decoration: none;\n  }\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 100%;\n  margin-top: 0;\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n  padding: 0;\n`;\n\nexport const MovieItem = styled.li`\n  background: rgb(255, 255, 255);\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n  width: 100%;\n  max-width: 200px;\n  margin: 10px;\n  border-radius: 5px;\n  display: inline-block;\n  text-decoration: none;\n  color: black;\n  transition-duration: 300ms;\n  &:hover {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: rgb(0 0 0 / 8%) 0px 10px 25px;\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Img = styled.img`\n  padding: 0px;\n  margin: 0px;\n  height: 260px;\n  width: 100%;\n  display: block;\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n`;\n\nexport const MovieTitle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  padding: 5px;\n  margin: 0px;\n  font-size: 10px;\n  color: #323a37;\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const FormDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Form = styled.form`\n    margin-top: 5px;\n    max-width: 600px;\n    display: flex;\n    jastyfy-contenr: center\n    max-width: 600px;;\n    background-color: #fff;\n    border-radius: 3px;\n    overflow: hidden;\n    box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%), 0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n}`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    color: #323a37;\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  border: 0;\n  //   background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  color: #323a37;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 100%;\n  margin-top: 0;\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n  padding: 0;\n`;\n\nexport const MovieItem = styled.li`\n  background: rgb(255, 255, 255);\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n  width: 100%;\n  max-width: 200px;\n  margin: 10px;\n  border-radius: 5px;\n  display: inline-block;\n  text-decoration: none;\n  color: black;\n  transition-duration: 300ms;\n  &:hover {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: rgb(0 0 0 / 8%) 0px 10px 25px;\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Img = styled.img`\n  padding: 0px;\n  margin: 0px;\n  height: 260px;\n  width: 100%;\n  display: block;\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n`;\n\nexport const MovieTitle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  padding: 5px;\n  margin: 0px;\n  font-size: 10px;\n  color: #323a37;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchByQuery } from '../../services/Api';\nimport Loader from '../../components/Loader/Loader';\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\nimport { FormDiv, Form, Input, Button } from './Movies.styled';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const searchQuery = searchParams.get('query');\n\n  useEffect(() => {\n    try {\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n    searchQuery && fetchByQuery(searchQuery).then(setMovies);\n  }, [searchQuery]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setSearchParams({ query });\n\n    setQuery('');\n  };\n  const onChange = e => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <>\n      <FormDiv>\n        <Form onSubmit={handleSubmit}>\n          <Input type=\"text\" value={query} onChange={onChange} />\n          <Button type=\"submit\">search</Button>\n        </Form>\n      </FormDiv>\n      {isLoading && <Loader />}\n      {error && <p>Oops, something went wrong...</p>}\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport defaultPhoto from '../components/Images/default.jpg';\nimport defaultMoviePhoto from '../components/Images/defaultMovie.jpg';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'd49e0110fba862765bd35e51be725d3a',\n};\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrending = async () => {\n  return axios.get(`/trending/all/week?`).then(({ data: { results } }) =>\n    results.map(({ id, title, poster_path: poster }) => ({\n      id,\n      title,\n      poster: IMG_URL + poster,\n    }))\n  );\n};\n\nexport const fetchByQuery = async query => {\n  return axios\n    .get(`/search/movie?query=${query}`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: poster ? IMG_URL + poster : defaultMoviePhoto,\n      }))\n    );\n};\n\nexport const fetchMovieDetails = movieId => {\n  return axios\n    .get(`/movie/${movieId}?`)\n    .then(\n      ({\n        data: {\n          id,\n          poster_path: poster,\n          title,\n          release_date: releaseYear,\n          vote_average: userScore,\n          overview,\n          genres,\n        },\n      }) => ({\n        id,\n        poster: IMG_URL + poster,\n        title,\n        releaseYear: new Date(releaseYear).getFullYear(),\n        userScore: Math.round(userScore * 10),\n        overview,\n        genres,\n      })\n    );\n};\n\nexport const fetchMovieCredits = movieId => {\n  return axios.get(`/movie/${movieId}/credits?`).then(({ data: { cast } }) =>\n    cast.map(({ id, name, character, profile_path: photo }) => ({\n      id,\n      name,\n      character,\n      photo: photo ? IMG_URL + photo : defaultPhoto,\n    }))\n  );\n};\n\nexport const fetchMovieReviews = movieId => {\n  return axios.get(`/movie/${movieId}/reviews?`).then(({ data: { results } }) =>\n    results.map(({ id, author, content }) => ({\n      id,\n      author,\n      content,\n    }))\n  );\n};\n"],"names":["Loading","styled","strokeColor","strokeWidth","animationDuration","width","visible","MoviesList","movies","location","useLocation","map","id","title","poster","to","state","from","src","alt","HomeContainer","HomeTitle","MovieList","MovieItem","MovieLink","Link","Img","MovieTitle","FormDiv","Form","Input","Button","useState","query","setQuery","setMovies","useSearchParams","searchParams","setSearchParams","isLoading","setIsLoading","error","searchQuery","get","useEffect","fetchByQuery","then","onSubmit","e","preventDefault","type","value","onChange","target","Loader","length","axios","api_key","IMG_URL","fetchTrending","data","results","poster_path","defaultMoviePhoto","fetchMovieDetails","movieId","releaseYear","release_date","userScore","vote_average","overview","genres","Date","getFullYear","Math","round","fetchMovieCredits","cast","name","character","photo","profile_path","fetchMovieReviews","author","content"],"sourceRoot":""}